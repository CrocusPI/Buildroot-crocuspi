From ccd09727cf90306ed8a05b4dfaffc30ca0d2cbc7 Mon Sep 17 00:00:00 2001
From: YuzukiTsuru <gloomyghost@gloomyghost.com>
Date: Sun, 6 Mar 2022 20:41:40 +0800
Subject: [PATCH 06/22] board: add usb gadget and suniv support

---
 board/sunxi/board.c | 49 ++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 46 insertions(+), 3 deletions(-)

diff --git a/board/sunxi/board.c b/board/sunxi/board.c
index f32e8f58..e389e4df 100644
--- a/board/sunxi/board.c
+++ b/board/sunxi/board.c
@@ -226,7 +226,7 @@ int board_init(void)
 
 	gd->bd->bi_boot_params = (PHYS_SDRAM_0 + 0x100);
 
-#ifndef CONFIG_ARM64
+#if !defined(CONFIG_ARM64) && !defined(CONFIG_MACH_SUNIV)
 	asm volatile("mrc p15, 0, %0, c0, c1, 1" : "=r"(id_pfr1));
 	debug("id_pfr1: 0x%08x\n", id_pfr1);
 	/* Generic Timer Extension available? */
@@ -253,7 +253,7 @@ int board_init(void)
 #endif
 		}
 	}
-#endif /* !CONFIG_ARM64 */
+#endif /* !CONFIG_ARM64 && !CONFIG_MACH_SUNIV */
 
 	ret = axp_gpio_init();
 	if (ret)
@@ -380,22 +380,31 @@ void board_nand_init(void)
 #ifdef CONFIG_MMC
 static void mmc_pinmux_setup(int sdc)
 {
-	unsigned int pin;
+	__maybe_unused unsigned int pin;
 	__maybe_unused int pins;
 
 	switch (sdc) {
 	case 0:
 		/* SDC0: PF0-PF5 */
+#ifndef CONFIG_UART0_PORT_F
 		for (pin = SUNXI_GPF(0); pin <= SUNXI_GPF(5); pin++) {
 			sunxi_gpio_set_cfgpin(pin, SUNXI_GPF_SDC0);
 			sunxi_gpio_set_pull(pin, SUNXI_GPIO_PULL_UP);
 			sunxi_gpio_set_drv(pin, 2);
 		}
+#endif
 		break;
 
 	case 1:
 		pins = sunxi_name_to_gpio_bank(CONFIG_MMC1_PINS);
 
+#if defined(CONFIG_MACH_SUNIV)
+		for (pin = SUNXI_GPC(0); pin <= SUNXI_GPC(2); pin++) {
+			sunxi_gpio_set_cfgpin(pin, SUNXI_GPC_SDC2);
+			sunxi_gpio_set_pull(pin, SUNXI_GPIO_PULL_UP);
+			sunxi_gpio_set_drv(pin, 2);
+		}
+#endif
 #if defined(CONFIG_MACH_SUN4I) || defined(CONFIG_MACH_SUN7I) || \
     defined(CONFIG_MACH_SUN8I_R40)
 		if (pins == SUNXI_GPIO_H) {
@@ -841,6 +850,17 @@ static void setup_environment(const void *fdt)
 	}
 }
 
+static int usb_gadget_init(void)
+{
+	int ret;
+	struct udevice *usb_dev;
+	ret = uclass_first_device(UCLASS_USB_GADGET_GENERIC, &usb_dev);
+	if (!usb_dev || ret) {
+		pr_err("No USB gadget device found\n");
+	}
+	return ret;
+}
+
 int misc_init_r(void)
 {
 	uint boot;
@@ -861,12 +881,35 @@ int misc_init_r(void)
 		env_set("mmc_bootdev", "1");
 	}
 
+	switch (boot) {
+		case BOOT_DEVICE_MMC1:
+			env_set("boot_device", "mmc0");
+			break;
+		case BOOT_DEVICE_MMC2:
+			env_set("boot_device", "mmc1");
+			break;
+		case BOOT_DEVICE_SPI:
+			env_set("boot_device", "spi");
+			break;
+		default:
+			env_set("boot_device", "fel");
+			break;
+	}
+
 	setup_environment(gd->fdt_blob);
 
 #ifdef CONFIG_USB_ETHER
 	usb_ether_init();
 #endif
 
+#ifdef CONFIG_USB_GADGET
+	usb_gadget_init();
+#endif
+
+	if(env_get("bootcmd") == NULL){
+		env_set("bootcmd", CONFIG_BOOTCOMMAND);
+	}
+
 	return 0;
 }
 
-- 
2.17.1

